p {
  color: green;
}

body {
  background: silver;
}

/* Sass @for Directive
The Sass @for directive facilitates you to generate a style in a loop. It is used when you require repeatedly set of styles. It uses counter variable to set the output for each iteration.

There are two types of keywords used for @for directive:

Through
To
Through Keyword
In Sass @for directive, the through keyword is used to specify the range including both the values of and .

Syntax:


@for $var from <start> through <end>  
Parameter explanation:

$var: It specifies the name of the variable like $i.

and : and are SassScript expressions which will return integers. If the is greater than then it decreases the value of counter variable and when is lesser than then it increases the value of counter variable.

Sass @for Directive Example with through keyword
Let's take an example to demonstrate the usage of Sass @for directive with through keyword. We have an HTML file named "simple.html", having the following data. */
.p1 {
  padding-left: 10px;
}

.p2 {
  padding-left: 20px;
}

.p3 {
  padding-left: 30px;
}

.p4 {
  padding-left: 40px;
}

.p_pink {
  background-color: pink;
}

.p_violet {
  background-color: violet;
}

.p_yellow {
  background-color: yellow;
}

.p_blue {
  background-color: blue;
}

.aqua {
  background-color: aqua;
  border: dotted;
}

.red {
  background-color: red;
  border: solid;
}

.green {
  background-color: green;
  border: double;
}

.p1 {
  padding-left: 10px;
}

.p2 {
  padding-left: 20px;
}

.p3 {
  padding-left: 30px;
}/*# sourceMappingURL=style.css.map */